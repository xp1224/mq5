//+------------------------------------------------------------------+
//|                                                         手数计算.mq5 |
//|                                                               xp |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "xp"
#property link      "https://www.mql5.com"
#property version   "1.00" 
#property indicator_chart_window
#property script_show_inputs

#property indicator_label1 "Plot 1"
#property indicator_type1 DRAW_LINE
#property indicator_color1 clrBlue
#property indicator_style1 STYLE_SOLID
#property indicator_width1 2

enum ENUM_POS_TL
{
   FOLLOW_PRICE,
   FIXED_POSITION
};

input string target_object_name = "1";
input color font_color = clrWhite;
input color  LabelColor = clrOrangeRed;
input ENUM_POS_TL LabelPosition = FIXED_POSITION;
input double stop_loss_amount = 50.0;
input double risk_percentage = 5;

double previousS1 = 0.0;
double previousS2 = 0.0;




int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
{

// 获取当前柱的时间和收盘价
   double close_price = close[0];
   
   
   
    double s1 = ObjectGetDouble(0, target_object_name, OBJPROP_PRICE, 0);
    double s2 = ObjectGetDouble(0, target_object_name, OBJPROP_PRICE, 1);

    Print("FIO名称为 ", target_object_name, " 的价格水平 100：", s1);
    Print("FIO名称为 ", target_object_name, " 的价格水平 0：", s2);

    double stop_loss_pips = MathAbs(s1 - s2);
    double risk_amount = risk_percentage / 100.0 * AccountInfoDouble(ACCOUNT_BALANCE);
    double margin_required = SymbolInfoDouble(_Symbol, SYMBOL_MARGIN_INITIAL);
    double one_lot_value = margin_required;
    double lots = risk_amount / (stop_loss_pips * one_lot_value);

    Print("计算的手数：", DoubleToString(lots, 2)); 
    Print("止损距离：", DoubleToString(stop_loss_pips, _Digits));
    Print("账户余额的百分比：", risk_amount);
    Print("一个标准手的保证金要求：", margin_required);
    
    string Text = "入场:" + DoubleToString(s1, _Digits) + "\n止损:" + DoubleToString(s2, _Digits) + "\n手数:" + DoubleToString(lots, 2);

    if (s1 != previousS1 || s2 != previousS2)
    {
        ObjectDelete(0, "TextLabel");

        if (LabelPosition == FOLLOW_PRICE)
        {
            if (ObjectFind(0, "TextLabel") != 0)
            {
                ObjectCreate(0, "TextLabel", OBJ_TEXT, 0, time, close_price + _Point);                
                ObjectSetInteger(0, "TextLabel", OBJPROP_COLOR, font_color);
                ObjectSetString(0, "TextLabel", OBJPROP_FONT, "Arial");
                ObjectSetInteger(0, "TextLabel", OBJPROP_COLOR, LabelColor);
                ObjectSetInteger(0, "TextLabel", OBJPROP_SELECTABLE, false);
                ObjectSetInteger(0, "TextLabel", OBJPROP_FONTSIZE, 12);
            }
             else
      {
            ObjectSetString(0, "TextLabel", OBJPROP_TEXT, Text);
       
            ObjectMove(0, "TextLabel", 0, time, close_price + _Point);
        }
        }
        else if (LabelPosition == FIXED_POSITION)
        {
            if (ObjectFind(0, "TextLabel") != 0)
            {
                int label = ObjectCreate(0, "TextLabel", OBJ_LABEL, 0, 0, 0);
                ObjectSetInteger(0, "TextLabel", OBJPROP_ANCHOR, ANCHOR_RIGHT_UPPER);
                ObjectSetInteger(0, "TextLabel", OBJPROP_CORNER, CORNER_RIGHT_UPPER);
                ObjectSetInteger(0, "TextLabel", OBJPROP_XDISTANCE, 200);
                ObjectSetInteger(0, "TextLabel", OBJPROP_YDISTANCE, 2);
                ObjectSetString(0, "TextLabel", OBJPROP_TEXT, Text);
                ObjectSetString(0, "TextLabel", OBJPROP_FONT, "Arial");
                ObjectSetInteger(0, "TextLabel", OBJPROP_COLOR, LabelColor);
                ObjectSetInteger(0, "TextLabel", OBJPROP_SELECTABLE, true);
                ObjectSetInteger(0, "TextLabel", OBJPROP_FONTSIZE, 12);
            }
            else
                ObjectSetString(0, "TextLabel", OBJPROP_TEXT, Text);
        }

        previousS1 = s1;
        previousS2 = s2;
    }

    return(rates_total);
}
